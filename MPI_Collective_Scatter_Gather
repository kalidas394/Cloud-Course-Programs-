#! usr/bin/env python

from mpi4py import MPI as mpi
import numpy as np
import scipy as sp
import time

a = np.arange(0,10000,0.01).reshape((1000,1000))

b = np.transpose(a)
 
dotp = np.dot(a,b)

comm = mpi.COMM_WORLD
size = comm.Get_size()
rank = comm.Get_rank()

def blockshaped(arr, nrows, ncols):
    """
    Return an array of shape (n, nrows, ncols) where
    n * nrows * ncols = arr.size
    """
    h, w = arr.shape
    return (arr.reshape(h//nrows, nrows, -1, ncols)
               .swapaxes(1,2)
               .reshape(-1, nrows, ncols))

x = blockshaped(a,100,1000)
y = blockshaped(b,1000,100)
if rank == 0:
         data = x 
         data1 = y
else :
         data = np.empty(10000, np.float64).reshape((100, 100))
         data1 = np.empty(1000000, np.float64).reshape((1000, 1000))
        

m= np.empty(1000000, np.float64).reshape((1000, 1000))
data = comm.scatter(data, root= 0)
data1 = comm.scatter(data1, root =0)

comm.Barrier()

m = np.dot(data, data1)

data3 = comm.gather(m, root =0)

print "\nThe final product matrix is:", data3

                    
          
